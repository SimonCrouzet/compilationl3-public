/* This file was generated by SableCC (http://www.sablecc.org/). */

package lcompil.node;

import lcompil.analysis.*;

@SuppressWarnings("nls")
public final class APlusExprEgal extends PExprEgal
{
    private PExprEgal _exprEgal_;
    private TPlus _plus_;
    private PExprPlus _exprPlus_;

    public APlusExprEgal()
    {
        // Constructor
    }

    public APlusExprEgal(
        @SuppressWarnings("hiding") PExprEgal _exprEgal_,
        @SuppressWarnings("hiding") TPlus _plus_,
        @SuppressWarnings("hiding") PExprPlus _exprPlus_)
    {
        // Constructor
        setExprEgal(_exprEgal_);

        setPlus(_plus_);

        setExprPlus(_exprPlus_);

    }

    @Override
    public Object clone()
    {
        return new APlusExprEgal(
            cloneNode(this._exprEgal_),
            cloneNode(this._plus_),
            cloneNode(this._exprPlus_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAPlusExprEgal(this);
    }

    public PExprEgal getExprEgal()
    {
        return this._exprEgal_;
    }

    public void setExprEgal(PExprEgal node)
    {
        if(this._exprEgal_ != null)
        {
            this._exprEgal_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._exprEgal_ = node;
    }

    public TPlus getPlus()
    {
        return this._plus_;
    }

    public void setPlus(TPlus node)
    {
        if(this._plus_ != null)
        {
            this._plus_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._plus_ = node;
    }

    public PExprPlus getExprPlus()
    {
        return this._exprPlus_;
    }

    public void setExprPlus(PExprPlus node)
    {
        if(this._exprPlus_ != null)
        {
            this._exprPlus_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._exprPlus_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._exprEgal_)
            + toString(this._plus_)
            + toString(this._exprPlus_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._exprEgal_ == child)
        {
            this._exprEgal_ = null;
            return;
        }

        if(this._plus_ == child)
        {
            this._plus_ = null;
            return;
        }

        if(this._exprPlus_ == child)
        {
            this._exprPlus_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._exprEgal_ == oldChild)
        {
            setExprEgal((PExprEgal) newChild);
            return;
        }

        if(this._plus_ == oldChild)
        {
            setPlus((TPlus) newChild);
            return;
        }

        if(this._exprPlus_ == oldChild)
        {
            setExprPlus((PExprPlus) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
