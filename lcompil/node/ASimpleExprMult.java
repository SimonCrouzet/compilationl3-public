/* This file was generated by SableCC (http://www.sablecc.org/). */

package lcompil.node;

import lcompil.analysis.*;

@SuppressWarnings("nls")
public final class ASimpleExprMult extends PExprMult
{
    private PExprComplete _exprComplete_;

    public ASimpleExprMult()
    {
        // Constructor
    }

    public ASimpleExprMult(
        @SuppressWarnings("hiding") PExprComplete _exprComplete_)
    {
        // Constructor
        setExprComplete(_exprComplete_);

    }

    @Override
    public Object clone()
    {
        return new ASimpleExprMult(
            cloneNode(this._exprComplete_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseASimpleExprMult(this);
    }

    public PExprComplete getExprComplete()
    {
        return this._exprComplete_;
    }

    public void setExprComplete(PExprComplete node)
    {
        if(this._exprComplete_ != null)
        {
            this._exprComplete_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._exprComplete_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._exprComplete_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._exprComplete_ == child)
        {
            this._exprComplete_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._exprComplete_ == oldChild)
        {
            setExprComplete((PExprComplete) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
